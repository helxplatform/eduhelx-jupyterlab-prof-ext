{"version":3,"file":"lib_index_js.145449ba8616931d9a24.js","mappings":"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","sources":["webpack://jupyterlab_eduhelx_submission/./src/api/api.ts","webpack://jupyterlab_eduhelx_submission/./src/api/assignment.ts","webpack://jupyterlab_eduhelx_submission/./src/api/commit.ts","webpack://jupyterlab_eduhelx_submission/./src/api/course.ts","webpack://jupyterlab_eduhelx_submission/./src/api/instructor.ts","webpack://jupyterlab_eduhelx_submission/./src/api/server-settings.ts","webpack://jupyterlab_eduhelx_submission/./src/api/student.ts","webpack://jupyterlab_eduhelx_submission/./src/api/submission.ts","webpack://jupyterlab_eduhelx_submission/./src/api/user.ts","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignment-content/assignment-content.tsx","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignment-content/style.ts","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignment-info/assignment-info.tsx","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignment-info/style.ts","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignment-panel.tsx","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignment-submissions/assignment-submissions.tsx","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignment-submissions/style.ts","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignment-submit-form/assignment-submit-button/assignment-submit-button.tsx","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignment-submit-form/assignment-submit-button/style.ts","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignment-submit-form/assignment-submit-form.tsx","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignment-submit-form/style.ts","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignments-list/assignments-list.tsx","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/assignments-list/style.ts","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/no-assignment-warning/no-assignment-warning.tsx","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/no-assignment-warning/style.ts","webpack://jupyterlab_eduhelx_submission/./src/components/assignment-panel/style.ts","webpack://jupyterlab_eduhelx_submission/./src/components/style.ts","webpack://jupyterlab_eduhelx_submission/./src/components/text-divider/style.ts","webpack://jupyterlab_eduhelx_submission/./src/components/text-divider/text-divider.tsx","webpack://jupyterlab_eduhelx_submission/./src/contexts/assignment-context.tsx","webpack://jupyterlab_eduhelx_submission/./src/contexts/backdrop-context.tsx","webpack://jupyterlab_eduhelx_submission/./src/contexts/commands-context.tsx","webpack://jupyterlab_eduhelx_submission/./src/contexts/settings-context.tsx","webpack://jupyterlab_eduhelx_submission/./src/contexts/snackbar-context.tsx","webpack://jupyterlab_eduhelx_submission/./src/handler.ts","webpack://jupyterlab_eduhelx_submission/./src/index.ts","webpack://jupyterlab_eduhelx_submission/./src/model.ts","webpack://jupyterlab_eduhelx_submission/./src/style/icons.ts","webpack://jupyterlab_eduhelx_submission/./src/utils/date-format.tsx","webpack://jupyterlab_eduhelx_submission/./src/widgets/assignment-widget.tsx"],"sourcesContent":["import qs from 'qs'\nimport { ServerConnection } from '@jupyterlab/services'\nimport { requestAPI } from '../handler'\nimport { IAssignment, Assignment, ICurrentAssignment } from './assignment'\nimport { IStudent, Student } from './student'\nimport { ISubmission, Submission } from './submission'\nimport { ICourse, Course } from './course'\nimport { IServerSettings, ServerSettings } from './server-settings'\nimport {\n    AssignmentResponse,\n    CourseResponse,\n    StudentResponse,\n    SubmissionResponse,\n    ServerSettingsResponse,\n} from './api-responses'\n\nexport interface GetAssignmentsResponse {\n    assignments: IAssignment[] | null\n    currentAssignment: ICurrentAssignment | null\n}\n\nexport interface GetStudentAndCourseResponse {\n    student: IStudent\n    course: ICourse\n}\n\nexport async function getStudentAndCourse(): Promise<GetStudentAndCourseResponse> {\n    const { student, course } = await requestAPI<{\n        student: StudentResponse\n        course: CourseResponse\n    }>(`/course_student`, {\n        method: 'GET'\n    })\n    return {\n        student: Student.fromResponse(student),\n        course: Course.fromResponse(course)\n    }\n}\n\n\nexport async function getAssignments(path: string): Promise<GetAssignmentsResponse> {\n    const { assignments, current_assignment } = await requestAPI<{\n        assignments: AssignmentResponse[] | null\n        current_assignment: AssignmentResponse | null\n    }>(`/assignments?${ qs.stringify({ path }) }`, {\n        method: 'GET'\n    })\n    return {\n        assignments: assignments ? assignments.map((data) => Assignment.fromResponse(data)) : null,\n        currentAssignment: current_assignment ? Assignment.fromResponse(current_assignment) as ICurrentAssignment : null\n    }\n}\n\nexport async function getServerSettings(): Promise<IServerSettings> {\n    try {\n        const data = await requestAPI<ServerSettingsResponse>('/settings', {\n            method: 'GET'\n        })\n        return ServerSettings.fromResponse(data)\n    } catch (e) {\n        if (e instanceof ServerConnection.ResponseError) {\n            const response = e.response;\n            if (response.status === 404) {\n                const message =\n                    'EduHeLx Submission server extension is unavailable. Please ensure you have installed the ' +\n                    'JupyterLab EduHeLx Submission server extension by running: pip install --upgrade jupyterlab_eduhelx_submission. ' +\n                    'To confirm that the server extension is installed, run: jupyter server extension list.'\n                throw new ServerConnection.ResponseError(response, message);\n            } else {\n                const message = e.message;\n                console.error('Failed to get the server extension settings', message);\n                throw new ServerConnection.ResponseError(response, message);\n            }\n        } else {\n            throw e;\n        }\n    }\n}\n\nexport async function submitAssignment(\n    currentPath: string,\n    summary: string,\n    description?: string\n): Promise<void> {\n    const res = await requestAPI<void>(`/submit_assignment`, {\n        method: 'POST',\n        body: JSON.stringify({\n            summary,\n            description,\n            current_path: currentPath\n        })\n    })\n}\n\nexport async function cloneStudentRepository(repositoryUrl: string, currentPath: string): Promise<string> {\n    const repositoryRootPath = await requestAPI<string>(`/clone_student_repository`, {\n        method: 'POST',\n        body: JSON.stringify({\n            repository_url: repositoryUrl,\n            current_path: currentPath\n        })\n    })\n    return repositoryRootPath\n}","import { IStudent, Student } from './student'\nimport { ISubmission, Submission } from './submission'\nimport { AssignmentResponse } from './api-responses'\n\nexport interface IAssignment {\n    readonly id: number\n    readonly name: string\n    readonly directoryPath: string\n    // Added by serverextension so that we know what path to give the filebrowser\n    // to open an assignment, even though we don't know where the repo root is.\n    readonly absoluteDirectoryPath: string\n    readonly createdDate: Date\n    readonly adjustedAvailableDate: Date | null\n    readonly adjustedDueDate: Date | null\n    readonly lastModifiedDate: Date\n\n    // Indicates that release date has been deferred to a later date for the student\n    readonly isDeferred: boolean\n    // Indicates that due date is extended to a later date for the student\n    readonly isExtended: boolean\n    // Indicates if an assignment has an available_date and a due_date assigned to it.\n    readonly isCreated: boolean\n    // Indicates if an assignment is available to work on (e.g. date is greater than adjusted_available_date)\n    readonly isAvailable: boolean\n    // Indicates if an assignment is no longer available to work on (e.g. date is greater than adjusted_due_date)\n    readonly isClosed: boolean\n    readonly submissions?: ISubmission[]\n}\n\n// Submissions are definitely defined in an ICurrentAssignment\nexport interface ICurrentAssignment extends IAssignment {\n    readonly submissions: ISubmission[] \n}\n\nexport class Assignment implements IAssignment {\n    constructor(\n        private _id: number,\n        private _name: string,\n        private _directoryPath: string,\n        private _absoluteDirectoryPath: string,\n        private _createdDate: Date,\n        private _adjustedAvailableDate: Date | null,\n        private _adjustedDueDate: Date | null,\n        private _lastModifiedDate: Date,\n\n        private _isDeferred: boolean,\n        private _isExtended: boolean,\n        private _isCreated: boolean,\n        private _isAvailable: boolean,\n        private _isClosed: boolean,\n        private _submissions?: ISubmission[]\n    ) {}\n    \n    get id() { return this._id }\n    get name() { return this._name }\n    get directoryPath() { return this._directoryPath }\n    get absoluteDirectoryPath() { return this._absoluteDirectoryPath }\n    get createdDate() { return this._createdDate }\n    get adjustedAvailableDate() { return this._adjustedAvailableDate }\n    get adjustedDueDate() { return this._adjustedDueDate }\n    get lastModifiedDate() { return this._lastModifiedDate }\n    \n\n    get isDeferred() { return this._isDeferred }\n    get isExtended() { return this._isExtended }\n    get isCreated() { return this._isCreated }\n    get isAvailable() { return this._isAvailable }\n    get isClosed() { return this._isClosed }\n\n    get submissions() { return this._submissions }\n    \n\n    static fromResponse(data: AssignmentResponse): IAssignment {\n        return new Assignment(\n            data.id,\n            data.name,\n            data.directory_path,\n            data.absolute_directory_path,\n            new Date(data.created_date),\n            data.adjusted_available_date ? new Date(data.adjusted_available_date) : null,\n            data.adjusted_due_date ? new Date(data.adjusted_due_date) : null,\n            new Date(data.last_modified_date),\n\n            data.is_deferred,\n            data.is_extended,\n            data.is_created,\n            data.is_available,\n            data.is_closed,\n            data.submissions?.map((res) => Submission.fromResponse(res))\n        )\n    }\n}","import { CommitResponse } from './api-responses'\n\nexport interface ICommit {\n    id: string\n    idShort: string\n    // The author and committer should always be the same, but there is a practical distinction in the git spec.\n    // The author is the person who originally wrote the changes for the commit.\n    authorName: string\n    authorEmail: string\n    // The committer is the person who actually commits the changes.\n    committerName: string\n    committerEmail: string\n    message: string\n    // The summary is everything before the first newline character in the commit message.\n    summary: string\n    // The description is everything after the first newline character in the commit message.\n    description: string\n}\n\nexport class Commit implements ICommit {\n    constructor(\n        private _id: string,\n        private _authorName: string,\n        private _authorEmail: string,\n        private _committerName: string,\n        private _committerEmail: string,\n        private _message: string\n    ) {}\n\n    get id() { return this._id }\n    get idShort() { return this._id.slice(0, 7) }\n    get authorName() { return this._authorName }\n    get authorEmail() { return this._authorEmail }\n    get committerName() { return this._committerName }\n    get committerEmail() { return this._committerEmail }\n    get message() { return this._message }\n    get summary() {\n        const [summary, ...description] = this.message.split(\"\\n\")\n        return summary\n    }\n    get description() {\n        const [summary, ...description] = this.message.split(\"\\n\")\n        return description.join(\"\\n\")\n    }\n\n    static fromResponse(data: CommitResponse): ICommit {\n        return new Commit(\n            data.id,\n            data.author_name,\n            data.author_email,\n            data.committer_name,\n            data.committer_email,\n            data.message\n        )\n    }\n}","import { CourseResponse } from './api-responses'\nimport { IInstructor, Instructor } from './instructor'\n\nexport interface ICourse {\n    id: number\n    name: string\n    masterRemoteUrl: string\n    instructors: IInstructor[]\n}\n\nexport class Course implements ICourse {\n    constructor(\n        private _id: number,\n        private _name: string,\n        private _masterRemoteUrl: string,\n        private _instructors: IInstructor[]\n    ) {}\n\n    get id() { return this._id }\n    get name() { return this._name }\n    get masterRemoteUrl() { return this._masterRemoteUrl }\n    get instructors() { return this._instructors }\n\n    static fromResponse(data: CourseResponse): ICourse {\n        return new Course(\n            data.id,\n            data.name,\n            data.master_remote_url,\n            data.instructors.map((res) => Instructor.fromResponse(res))\n        )\n    }\n}","import { InstructorResponse } from './api-responses'\nimport { IUser, User } from './user'\n\nexport interface IInstructor extends IUser {\n}\n\nexport class Instructor extends User implements IInstructor {\n    constructor(\n        id: number,\n        onyen: string,\n        firstName: string,\n        lastName: string,\n        email: string\n    ) {\n        super(id, onyen, firstName, lastName, email)\n    }\n\n    static fromResponse(data: InstructorResponse): IInstructor {\n        return new Instructor(\n            data.id,\n            data.onyen,\n            data.first_name,\n            data.last_name,\n            data.email\n        )\n    }\n}","import { ServerSettingsResponse } from './api-responses'\n\nexport interface IServerSettings {}\nexport class ServerSettings implements IServerSettings {\n    constructor() {}\n    \n    static fromResponse(data: ServerSettingsResponse): IServerSettings {\n        return new ServerSettings()\n    }\n}","import { StudentResponse } from './api-responses'\nimport { IUser, User } from './user'\n\nexport interface IStudent extends IUser {\n    readonly joinDate: Date\n    readonly exitDate: Date | null\n}\n\nexport class Student extends User implements IStudent {\n    constructor(\n        id: number,\n        onyen: string,\n        firstName: string,\n        lastName: string,\n        email: string,\n        private _joinDate: Date,\n        private _exitDate: Date | null\n    ) {\n        super(id, onyen, firstName, lastName, email)\n    }\n    get joinDate() { return this._joinDate }\n    get exitDate() { return this._exitDate }\n\n    static fromResponse(data: StudentResponse): IStudent {\n        return new Student(\n            data.id,\n            data.onyen,\n            data.first_name,\n            data.last_name,\n            data.email,\n            new Date(data.join_date),\n            data.exit_date ? new Date(data.exit_date) : null\n        )\n    }\n}","import moment from 'moment'\nimport { IStudent, Student } from './student'\nimport { ICommit, Commit } from './commit'\nimport { SubmissionResponse } from './api-responses'\n\nexport interface ISubmission {\n    readonly id: number\n    readonly active: boolean\n    readonly submissionTime: Date\n    readonly commit: ICommit\n}\n\nexport class Submission implements ISubmission {\n    constructor(\n        private _id: number,\n        private _active: boolean,\n        private _submissionTime: Date,\n        private _commit: ICommit\n    ) {}\n    get id() { return this._id }\n    get active() { return this._active }\n    get submissionTime() { return this._submissionTime }\n    get commit() { return this._commit }\n\n    static fromResponse(data: SubmissionResponse): ISubmission {\n        return new Submission(\n            data.id,\n            data.active,\n            new Date(data.submission_time),\n            Commit.fromResponse(data.commit)\n        )\n    }\n}","import { UserResponse } from './api-responses'\n\nexport interface IUser {\n    id: number\n    onyen: string\n    firstName: string\n    lastName: string\n    fullName: string\n    email: string\n}\n\nexport class User implements IUser {\n    constructor(\n        private _id: number,\n        private _onyen: string,\n        private _firstName: string,\n        private _lastName: string,\n        private _email: string\n    ) {}\n\n    get id() { return this._id }\n    get onyen() { return this._onyen }\n    get firstName() { return this._firstName }\n    get lastName() { return this._lastName }\n    get fullName() { return `${ this.firstName } ${ this.lastName }` }\n    get email() { return this._email }\n\n    static fromResponse(data: UserResponse): IUser {\n        return new User(\n            data.id,\n            data.onyen,\n            data.first_name,\n            data.last_name,\n            data.onyen\n        )\n    }\n}","import React, { Fragment, useEffect, useState } from 'react'\nimport { CircularProgress, Divider } from '@material-ui/core'\nimport { assignmentContainerClass, containerClass, loadingContainerClass } from './style'\nimport { NoAssignmentWarning } from '../no-assignment-warning'\nimport { AssignmentInfo } from '../assignment-info'\nimport { AssignmentSubmissions } from '../assignment-submissions'\nimport { AssignmentSubmitForm } from '../assignment-submit-form'\nimport { useAssignment } from '../../../contexts'\n\nexport const AssignmentContent = () => {\n    const { loading, path, assignment, student, assignments } = useAssignment()!\n\n    /*\n    const [showSelectionView, setShowSelectionView] = useState<boolean>(true)\n\n    useEffect(() => {\n        // When the path / active assignment changes,\n        // if there's an active assignment, show the assignment view.\n        if (assignment) setShowSelectionView(false)\n        // If there isn't an assignment in the current directory, show the selection view.\n        else setShowSelectionView(true)\n        // Then, users can press a button while in the assignment view, users can press\n        // a back button to go back to the selection view.\n    }, [path, assignment?.id])\n    */\n\n    return (\n        <div className={ containerClass }>\n            {\n                loading ? (\n                    <div className={ loadingContainerClass }>\n                        <CircularProgress color=\"inherit\" />\n                    </div>\n                ) : assignments === null || assignment === null ? (\n                    <NoAssignmentWarning noRepository={ assignments === null } />\n                ) : (\n                    <div className={ assignmentContainerClass }>\n                        <AssignmentInfo />\n                        <AssignmentSubmissions style={{ flexGrow: 1 }} />\n                        <AssignmentSubmitForm />\n                    </div>\n                )\n            }\n        </div>\n    )\n}","import { style } from 'typestyle'\n\nexport const containerClass = style({\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column'\n})\n\nexport const loadingContainerClass = style({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '36px 11px 4px 11px',\n    color: 'var(--md-blue-600)'\n})\n\nexport const assignmentContainerClass = style({\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%'\n})","import React from 'react'\nimport { ArrowBackSharp } from '@material-ui/icons'\nimport { assignmentInfoClass, assignmentInfoSectionClass, assignmentInfoSectionHeaderClass, assignmentNameClass } from './style'\nimport { useAssignment } from '../../../contexts'\nimport { DateFormat } from '../../../utils'\n\nconst MS_IN_HOURS = 3.6e6\n\ninterface AssignmentInfoProps {\n}\n\nexport const AssignmentInfo = ({  }: AssignmentInfoProps) => {\n    const { assignment, student, course } = useAssignment()!\n    if (!student || !assignment || !course) return null\n\n    const hoursUntilDue = assignment.isCreated ? (\n        (assignment.adjustedDueDate!.getTime() - Date.now()) / MS_IN_HOURS\n    ) : Infinity\n\n    return (\n        <div className={ assignmentInfoClass }>\n            <div>\n                <header className={ assignmentNameClass }>{ assignment.name }</header>\n                { assignment.isClosed ? (\n                    <h5 style={{\n                        margin: 0,\n                        marginTop: 8,\n                        fontSize: 13,\n                        color: 'var(--jp-ui-font-color1)',\n                        textTransform: 'uppercase',\n                        letterSpacing: 0.75\n                    }}>\n                        Closed\n                    </h5>\n                ) : null }\n            </div>\n            <div className={ assignmentInfoSectionClass } style={{ marginTop: 16 }}>\n                <h5 className={ assignmentInfoSectionHeaderClass }>Student</h5>\n                <span>{ student.firstName } { student.lastName }</span>\n            </div>\n            <div className={ assignmentInfoSectionClass }>\n                <h5 className={ assignmentInfoSectionHeaderClass }>\n                    Professor{ course.instructors.length > 1 ? \"s\" : \"\" }\n                </h5>\n                <span>{ course.instructors.map((ins) => ins.fullName).join(\", \") }</span>\n            </div>\n            <div className={ assignmentInfoSectionClass }>\n                <h5 className={ assignmentInfoSectionHeaderClass }>Due date</h5>\n                <div>\n                    { assignment.isCreated ? (\n                        new DateFormat(assignment.adjustedDueDate!).toBasicDatetime()\n                    ) : (\n                        `To be determined`\n                    ) }\n                    { assignment.isExtended ? (\n                        <i>&nbsp;(extended)</i>\n                    ) : null }\n                </div>\n                { assignment.isCreated && !assignment.isClosed && hoursUntilDue <= 2 ? (\n                    <div style={{ marginTop: 4, color: 'var(--jp-warn-color0)' }}>\n                        Warning: { new DateFormat(assignment.adjustedDueDate!).toRelativeDatetime() } remaining\n                    </div>\n                ) : null }\n            </div>\n        </div>\n    )\n}","import { style } from 'typestyle'\n\nexport const assignmentInfoClass = style({\n    fontSize: 'var(--jp-ui-font-size1)',\n    color: 'var(--jp-ui-font-color2)',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '0 12px'\n})\n\nexport const assignmentNameClass = style({\n    flex: '0 0 auto',\n    color: 'var(--jp-ui-font-color1)',\n    fontSize: 'var(--jp-ui-font-size3)',\n    fontWeight: 600,\n    marginTop: 6,\n    padding: '8px 0',\n    marginBottom: 0,\n    paddingBottom: 0\n})\n\nexport const assignmentInfoSectionClass = (style as any)({\n    color: 'var(--jp-ui-font-color1)',\n    marginBottom: 16,\n    '& > *:first-child': {\n        fontSize: 12\n    },\n    '& > *': {\n        fontSize: 14\n    }\n})\n\nexport const assignmentInfoSectionHeaderClass = style({\n    margin: 0,\n    marginBottom: 4,\n    fontWeight: 600\n})\n","import React, { Fragment, ReactNode, useMemo } from 'react'\nimport { ArrowBackSharp } from '@material-ui/icons'\nimport {\n    panelWrapperClass,\n    panelHeaderClass\n} from './style'\nimport { AssignmentContent } from './assignment-content'\nimport { useAssignment, useCommands } from '../../contexts'\n\ninterface IAssignmentPanelProps {\n}\n\nexport const AssignmentPanel = ({}: IAssignmentPanelProps) => {\n    const commands = useCommands()!\n    const { course, assignment } = useAssignment()!\n    const headerName = useMemo<ReactNode>(() => {\n        const headerFragments = []\n        // if (assignment) headerFragments.push(assignment.name)\n        if (course) headerFragments.push(course.name)\n        headerFragments.push('EduHeLx')\n        return (\n            <Fragment>\n                { headerFragments.join(' • ') }\n            </Fragment>\n        )\n    }, [course])\n    return (\n        <div className={ panelWrapperClass }>\n            <header className={ panelHeaderClass }>\n                { assignment && (\n                    <ArrowBackSharp\n                        onClick={ () => commands.execute('filebrowser:go-to-path', {\n                            path: `${ assignment.absoluteDirectoryPath }/../`,\n                            dontShowBrowser: true\n                        }) }\n                        style={{ marginRight: 8, fontSize: 16, cursor: 'pointer' }}\n                    />\n                ) }\n                { headerName }\n            </header>\n            <AssignmentContent />\n        </div>\n    )\n}","import React, { Fragment, useMemo } from 'react'\nimport { \n    Table, TableHead, TableBody, TableRow, TableCell,\n    List, ListItem, ListItemText, ListItemIcon, Divider,\n    ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails,\n    Card, CardContent, Typography\n} from '@material-ui/core'\nimport { CheckSharp, DescriptionSharp, ExpandMoreSharp, PersonSharp } from '@material-ui/icons'\nimport {\n    noSubmissionsTextContainerClass, assignmentsTableClass,\n    assignmentSubmissionsContainerClass, assignmentSubmissionsHeaderClass,\n    activateSubmissionButtonClass,\n    assignmentsListClass\n} from './style'\nimport { TextDivider } from '../../text-divider'\nimport { useAssignment } from '../../../contexts'\nimport { DateFormat } from '../../../utils'\n\ninterface AssignmentSubmissionsProps extends React.HTMLProps<HTMLDivElement> {\n\n}\n\nexport const AssignmentSubmissions = ({ ...props }: AssignmentSubmissionsProps) => {\n    const { assignment } = useAssignment()!\n\n    const submissionSource = useMemo(() => (\n        assignment?.submissions.sort((a, b) => b.submissionTime.getTime() - a.submissionTime.getTime())\n    ), [assignment])\n    \n    if (!assignment) return null\n    if (assignment.submissions.length === 0) return (\n        <div className={ noSubmissionsTextContainerClass }>\n            You haven't made any submissions for this assignment yet.\n            To submit your work, press the \"Submit\" button at the bottom of the page.\n        </div>\n    )\n    return (\n        <div className={ assignmentSubmissionsContainerClass } { ...props }>\n            <TextDivider innerStyle={{ fontSize: 'var(--jp-ui-font-size2)' }} style={{ padding: '0 12px' }}>Submissions</TextDivider>\n            <div className={ assignmentsListClass }>\n                { submissionSource!.map((submission, i) => (\n                    <ExpansionPanel key={ submission.id } square>\n                        <ExpansionPanelSummary expandIcon={ <ExpandMoreSharp /> }>\n                            <ListItem>\n                                <ListItemIcon style={{ minWidth: 0, marginRight: 16 }}>\n                                    <span>{ `#${ submissionSource!.length - i }` }</span>\n                                </ListItemIcon>\n                                <ListItemText disableTypography>\n                                    <div style={{ fontSize: 12, color: 'var(--jp-ui-font-color2)', marginBottom: 4 }}>\n                                        { new DateFormat(submission.submissionTime).toBasicDatetime() }\n                                    </div>\n                                    <div style={{ fontSize: 13 }}>\n                                        { submission.commit.summary } \n                                    </div>\n                                </ListItemText>\n                            </ListItem>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <Card variant=\"outlined\">\n                                <CardContent style={{ padding: 0 }}>\n                                    <Typography variant=\"h5\" component=\"h5\" style={{ fontSize: 13, fontFamily: \"inherit\" }}>\n                                        { submission.commit.authorName }\n                                    </Typography>\n                                    <Typography style={{ fontSize: 12, marginBottom: 4, fontFamily: \"inherit\" }} color=\"textSecondary\">\n                                        { submission.commit.idShort }\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        component=\"p\"\n                                        style={{\n                                            fontSize: 12,\n                                            fontFamily: \"inherit\",\n                                            wordBreak: \"break-word\",\n                                            fontStyle: submission.commit.description ? \"normal\" : \"italic\"\n                                        }}\n                                    >\n                                        { submission.commit.description || \"No description\" }\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                )) }\n            </div>\n            {/* { assignment.submissions.map((submission) => (\n                <Fragment>\n                <div key={ submission.id } style={{ display: \"flex\", flexDirection: \"column\", padding: \"8px 12px\" }}>\n                    <small style={{ fontSize: 12, color: 'var(--jp-ui-font-color2)', marginBottom: 8 }}>\n                        { new DateFormat(submission.submissionTime).toBasicDatetime() }\n                    </small>\n                    <div style={{ fontSize: 13 }}>\n                        { submission.commit.summary } \n                    </div>\n                </div>\n                <Divider style={{ margin: '4px 0' }} />\n                </Fragment>\n            )) } */}\n        </div>\n    )\n}","import { style } from 'typestyle'\n\nexport const assignmentSubmissionsContainerClass = style({\n    display: 'flex',\n    flexDirection: 'column'\n})\n\nexport const assignmentSubmissionsHeaderClass = style({\n    margin: '0',\n    marginBottom: '2px',\n    padding: '0 12px',\n    fontWeight: 600,\n    color: 'var(--jp-ui-font-color0)',\n    fontSize: 'var(--jp-ui-font-size2)'\n})\n\nexport const noSubmissionsTextContainerClass = style({\n    width: '100%',\n    color: 'var(--jp-ui-font-color2)',\n    fontSize: 'var(--jp-ui-font-size1)',\n    lineHeight: 'var(--jp-content-line-height)',\n    textAlign: 'left',\n    padding: '0 12px',\n    flexGrow: 1\n})\n\nexport const assignmentsTableClass = (style as any)({\n    '& th, & td': {\n        height: 42,\n        fontSize: 13,\n    }\n})\n\nexport const activateSubmissionButtonClass = style({\n    fontSize: 13,\n    backgroundColor: 'var(--jp-layout-color0)',\n    color: 'var(--jp-ui-font-color0)',\n    borderRadius: 3,\n    border: '1px solid var(--jp-border-color2)',\n    padding: '4px 10px',\n    cursor: 'pointer'\n})\n\nexport const assignmentsListClass = (style as any)({\n    flexGrow: 1,\n    height: 0,\n    overflowY: 'auto',\n    padding: 0,\n    /** Adjusting clashing styles caused by using accordion summaries as ListItem components */\n    '& .MuiExpansionPanel-root, & .MuiExpansionPanel-root.Mui-expanded': {\n        boxShadow: 'none',\n        margin: 0,\n    },\n    '& .MuiExpansionPanel-root::before, & > div.MuiExpansionPanel-root.Mui-expanded::before': {\n        top: -1,\n        left: 0,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        position: 'absolute',\n        display: 'block !important'\n    },\n    '& .MuiExpansionPanel-root:first-child::before, & > div.MuiExpansionPanel-root.Mui-expanded:first-child::before': {\n        display: 'none !important'\n    },\n    '& .MuiExpansionPanelSummary-root, & .MuiExpansionPanelSummary-root.Mui-expanded': {\n        padding: 0,\n        minHeight: 'unset'\n    },\n    '& .MuiExpansionPanelSummary-content, & .MuiExpansionPanelSummary-content.Mui-expanded': {\n        margin: 0\n    },\n    '& .MuiListItem-root': {\n        paddingLeft: 12,\n        paddingRight: 12\n    },\n    '& .MuiExpansionPanelSummary-expandIcon': {\n        marginRight: 0\n    },\n    '& .MuiExpansionPanelDetails-root': {\n        paddingLeft: 12,\n        paddingRight: 12\n    },\n    '& .MuiExpansionPanelDetails-root > .MuiCard-root': {\n        borderWidth: 0,\n        borderLeftWidth: '2px !important',\n        // So that the border aligns with the assignment number,\n        // and the text aligns with the commit summary\n        paddingLeft: 22,\n        marginLeft: 8,\n        borderRadius: 0\n    },\n    '& .MuiExpansionPanelDetails-root > .MuiCard-root > .MuiCardContent-root': {\n        paddingLeft: 0\n    }\n})","import React from 'react'\nimport { PublishSharp } from '@material-ui/icons'\nimport { assignmentSubmitButton } from './style'\nimport { useAssignment } from '../../../../contexts'\nimport { classes } from 'typestyle'\nimport { disabledButtonClass } from '../../../style'\n\ninterface AssignmentSubmitButtonProps {\n    onClick: (e: any) => void\n    disabled?: boolean\n}\n\nexport const AssignmentSubmitButton = ({ onClick, disabled=false }: AssignmentSubmitButtonProps) => {\n    return (\n        <button\n            className={ classes(assignmentSubmitButton, disabled && disabledButtonClass) }\n            disabled={ disabled }\n            onClick={ onClick }\n        >\n            <PublishSharp style={{ fontSize: 22, marginRight: 4 }} /> Submit Assignment\n        </button>\n    )\n}","import { style } from 'typestyle'\n\nexport const assignmentSubmitButton = style({\n    fontSize: 14,\n    backgroundColor: 'var(--md-blue-500)',\n    border: 0,\n    borderRadius: 3,\n    cursor: 'pointer',\n    color: 'white',\n    height: 30.75,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n})","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Backdrop, CircularProgress, Input, Snackbar } from '@material-ui/core'\nimport { Alert } from '@material-ui/lab'\nimport { AssignmentSubmitButton } from './assignment-submit-button'\nimport {\n    submitFormContainerClass, submitRootClass,\n    summaryClass, descriptionClass,\n    activeStyle, disabledStyle\n} from './style'\nimport { useAssignment, useBackdrop, useSnackbar } from '../../../contexts'\nimport { submitAssignment as apiSubmitAssignment } from '../../../api'\n\ninterface AssignmentSubmitFormProps {\n\n}\n\nexport const AssignmentSubmitForm = ({ }: AssignmentSubmitFormProps) => {\n    const { assignment, path } = useAssignment()!\n    const backdrop = useBackdrop()!\n    const snackbar = useSnackbar()!\n\n    const [summaryText, setSummaryText] = useState<string>(\"\")\n    const [descriptionText, setDescriptionText] = useState<string>(\"\")\n    const [submitting, setSubmitting] = useState<boolean>(false)\n\n    const disabled = submitting || summaryText === \"\" || !assignment?.isAvailable || assignment?.isClosed\n    \n    const submitAssignment = async () => {\n        if (!path) {\n            // If this component is being rendered, this should never be possible.\n            console.log(\"Unknown cwd, can't submit\")\n            return\n        }\n        setSubmitting(true)\n        try {\n            // Use undefined for descriptionText if it is an empty string.\n            const submission = await apiSubmitAssignment(path, summaryText, descriptionText ?? undefined)\n            // Only clear summary/description if the submission goes through.\n            setSummaryText(\"\")\n            setDescriptionText(\"\")\n\n            snackbar.open({\n                type: 'success',\n                message: 'Successfully submitted assignment!'\n            })\n        } catch (e: any) {\n            snackbar.open({\n                type: 'error',\n                message: 'Failed to submit assignment!'\n            })\n        }\n        setSubmitting(false)\n    }\n    \n    useEffect(() => {\n        backdrop.setLoading(submitting)\n    }, [submitting])\n    \n    return (\n        <div className={ submitFormContainerClass }>\n            <Input\n                className={ summaryClass }\n                classes={{\n                    root: submitRootClass,\n                    focused: activeStyle,\n                    disabled: disabledStyle\n                }}\n                type=\"text\"\n                placeholder=\"Summary\"\n                title=\"Enter a summary for the submission (preferably less than 50 characters)\"\n                value={ summaryText }\n                onChange={ (e) => setSummaryText(e.target.value) }\n                onKeyDown={ (e) => {\n                    if (disabled) return\n                    if (e.key === 'Enter') submitAssignment()\n                } }\n                disabled={ submitting }\n                required\n                disableUnderline\n                fullWidth\n            />\n            <Input\n                className={ descriptionClass }\n                classes={{\n                    root: submitRootClass,\n                    focused: activeStyle,\n                    disabled: disabledStyle\n                }}\n                multiline\n                rows={ 5 }\n                rowsMax={ 10 }\n                placeholder=\"Description (optional)\"\n                title=\"Enter a description for the submission\"\n                value={ descriptionText }\n                onChange={ (e) => setDescriptionText(e.target.value) }\n                onKeyDown={ (e) => {\n                    // if (disabled) return\n                    // if (e.key === 'Enter') submitAssignment()\n                } }\n                disabled={ submitting }\n                disableUnderline\n                fullWidth\n            />\n            <AssignmentSubmitButton\n                onClick={ submitAssignment }\n                disabled={ disabled }\n            />\n        </div>\n    )\n}","import { style } from 'typestyle'\n\nexport const submitFormContainerClass = style({\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '12px 8px',\n    borderTop: 'var(--jp-border-width) solid var(--jp-border-color2)'\n})\n\nexport const submitRootClass = style({\n    color: 'var(--jp-ui-font-color1) !important',\n    fontSize: 'var(--jp-ui-font-size1) !important',\n    fontFamily: 'var(--jp-ui-font-family) !important',\n    backgroundColor: 'var(--jp-layout-color1) !important'\n})\n\nexport const summaryClass = style({\n    height: '2em',\n\n    marginBottom: '1em',\n    padding: 'var(--jp-code-padding)',\n\n    outline: 'none',\n    overflowX: 'auto',\n\n    border: 'var(--jp-border-width) solid var(--jp-border-color2)',\n    borderRadius: 3,\n\n    $nest: {\n        '&.Mui-error': {\n            border: 'calc(2 * var(--jp-border-width)) solid var(--jp-error-color1)'\n        }\n    }\n})\n\nexport const descriptionClass = style({\n    marginBottom: '1em',\n    padding: 'var(--jp-code-padding)',\n    paddingLeft: '5px !important',\n    paddingRight: '5px !important',\n\n    outline: 'none',\n    overflowX: 'auto',\n    resize: 'none',\n\n    border: 'var(--jp-border-width) solid var(--jp-border-color2)',\n    borderRadius: 3,\n\n    $nest: {\n        '&>*::placeholder': {\n            color: 'var(--jp-ui-font-color3)'\n        },\n        '&>*::-webkit-input-placeholder': {\n            color: 'var(--jp-ui-font-color3)'\n        },\n        '&>*::-moz-placeholder': {\n            color: 'var(--jp-ui-font-color3)'\n        },\n        '&>*::-ms-input-placeholder': {\n            color: 'var(--jp-ui-font-color3)'\n        }\n    }\n})\n\nexport const activeStyle = style({\n    outline: 'none',\n    border: 'var(--jp-border-width) solid var(--jp-brand-color1)'\n})\n\nexport const disabledStyle = style({\n    cursor: 'not-allowed !important',\n    color: 'var(--jp-ui-font-color2) !important',\n    backgroundColor: 'var(--jp-layout-color3) !important',\n    pointerEvents: 'auto !important' as any\n});","import React, { Fragment, useMemo, useState } from 'react'\nimport {\n    Avatar, List, ListItem, ListItemAvatar as _ListItemAvatar, ListItemText,\n    ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails\n} from '@material-ui/core'\nimport { OpenInNewSharp, QueryBuilderOutlined, ExpandMoreSharp } from '@material-ui/icons'\nimport { classes } from 'typestyle'\nimport { assignmentBucketContainerClass, assignmentListHeaderClass, assignmentListItemClass, downloadAssignmentButtonClass } from './style'\nimport { TextDivider } from '../../text-divider'\nimport { useAssignment, useCommands } from '../../../contexts'\nimport type { IAssignment } from '../../../api'\nimport { DateFormat } from '../../../utils'\nimport { assignmentsListClass } from '../assignment-submissions/style'\nimport { disabledButtonClass } from '../../style'\n\nconst ListItemAvatar = _ListItemAvatar as any\n\ninterface ListHeaderProps {\n    title: string\n}\n\ninterface AssignmentListItemProps {\n    assignment: IAssignment\n}\n\ninterface AssignmentsBucketProps {\n    title: string\n    assignments?: IAssignment[]\n    emptyText?: string\n    defaultExpanded?: boolean\n}\n\nconst ListHeader = ({ title }: ListHeaderProps) => {\n    return (\n        <span className={ assignmentListHeaderClass }>\n            { title }\n        </span>\n    )\n}\n\nconst AssignmentListItem = ({ assignment }: AssignmentListItemProps) => {\n    const commands = useCommands()!\n    return (\n        <ListItem\n            key={ assignment.id }\n            className={ assignmentListItemClass }\n            dense\n            style={{\n                padding: '4px 8px'\n            }}\n        >\n            <ListItemText disableTypography>\n                <div style={{ fontSize: 14, fontWeight: 500, marginBottom: 4 }}>\n                    { assignment.name }\n                </div>\n                <div style={{ fontSize: 13, color: 'var(--jp-ui-font-color2' }}>\n                    {\n                        !assignment.isCreated ? (\n                            <span>No release date yet</span>\n                        ) :\n                        assignment.isClosed ? (\n                            <span title={ new DateFormat(assignment.adjustedDueDate!).toBasicDatetime() }>\n                                Closed on { new DateFormat(assignment.adjustedDueDate!).toBasicDatetime() }\n                            </span>\n                        ) : assignment.isAvailable ? (\n                            <span title={ new DateFormat(assignment.adjustedDueDate!).toBasicDatetime() }>\n                                Closes in { new DateFormat(assignment.adjustedDueDate!).toRelativeDatetime() }\n                                { assignment.isExtended && (\n                                    <i>&nbsp;(extended)</i>\n                                ) }\n                            </span>\n                        ) : (\n                            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                <div\n                                    title={ new DateFormat(assignment.adjustedAvailableDate!).toBasicDatetime() }\n                                >\n                                    Opens in { new DateFormat(assignment.adjustedAvailableDate!).toRelativeDatetime() }\n                                </div>\n                                <div\n                                    title={ new DateFormat(assignment.adjustedDueDate!).toBasicDatetime() }\n                                    style={{ marginTop: 4, fontSize: 12, display: 'flex', alignItems: 'center' }}\n                                >\n                                    <QueryBuilderOutlined style={{ fontSize: 16 }} />\n                                    &nbsp;Lasts { new DateFormat(assignment.adjustedDueDate!).toRelativeDatetime(assignment.adjustedAvailableDate!) }\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n            </ListItemText>\n            <ListItemAvatar style={{ minWidth: 0, marginLeft: 16 }}>\n                <Avatar variant=\"square\">\n                    <button\n                        className={ classes(downloadAssignmentButtonClass, !assignment.isCreated && disabledButtonClass) }\n                        disabled={ !assignment.isCreated }\n                        onClick={ () => commands.execute('filebrowser:go-to-path', {\n                            path: assignment.absoluteDirectoryPath,\n                            dontShowBrowser: true\n                        }) }\n                    >\n                        <OpenInNewSharp />\n                    </button>\n                </Avatar>\n            </ListItemAvatar>\n        </ListItem>\n    )\n}\n\nconst AssignmentsBucket = ({\n    title,\n    assignments,\n    emptyText=\"There are currently no assignments to work on.\",\n    defaultExpanded=false,\n}: AssignmentsBucketProps) => {\n    const [expanded, setExpanded] = useState<boolean>(defaultExpanded)\n\n    const assignmentsSource = useMemo(() => (\n        assignments?.sort((a, b) => (a.adjustedAvailableDate?.getTime() ?? 0) - (b.adjustedAvailableDate?.getTime() ?? 0))\n    ), [assignments])\n\n    const isEmpty = useMemo(() => !assignmentsSource || assignmentsSource.length === 0, [assignmentsSource])\n\n    return (\n        <ExpansionPanel\n            className={ assignmentBucketContainerClass }\n            square\n            expanded={ expanded }\n            onChange={ () => setExpanded(!expanded) }\n        >\n            <ExpansionPanelSummary\n                expandIcon={ <ExpandMoreSharp /> }\n                style={{ paddingLeft: 11 }}\n            >\n                <ListHeader title={ title } />\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails\n                style={{ display: 'flex', flexDirection: 'column', paddingTop: 0, paddingLeft: 11, paddingRight: 11 }}\n            >\n                { !isEmpty ? (\n                    assignmentsSource?.map((assignment) => (\n                        <AssignmentListItem key={ assignment.id } assignment={ assignment } />\n                    ))\n                ) : (\n                    <span style={{ color: 'var(--jp-ui-font-color1)' }}>\n                        { emptyText }\n                    </span>\n                ) }\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n}\n\nexport const AssignmentsList = () => {\n    const { assignments } = useAssignment()!\n\n    const upcomingAssignments = useMemo(() => assignments?.filter((assignment) => !assignment.isAvailable), [assignments])\n    const activeAssignments = useMemo(() => assignments?.filter((assignment) => assignment.isAvailable && !assignment.isClosed), [assignments])\n    const pastAssignments = useMemo(() => assignments?.filter((assignment) => assignment.isAvailable && assignment.isClosed), [assignments])\n\n    return (\n        <div style={{ flexGrow: 1, display: 'flex', flexDirection: 'column', width: 'calc(100% + 22px)' }}>\n            <div className={ assignmentsListClass }>\n                <AssignmentsBucket\n                    title={ `Active${ activeAssignments ? \" (\" + activeAssignments.length + \")\" : \"\" }` }\n                    assignments={ activeAssignments }\n                    emptyText=\"There aren't any assignments available to work on at the moment.\"\n                    defaultExpanded={ true }\n                />\n                <AssignmentsBucket\n                    title={ `Upcoming${ upcomingAssignments ? \" (\" + upcomingAssignments.length + \")\" : \"\" }` }\n                    assignments={ upcomingAssignments }\n                    emptyText=\"There aren't any upcoming assignments right now.\"\n                    defaultExpanded={ true }\n                />\n                <AssignmentsBucket\n                    title={ `Past${ pastAssignments ? \" (\" + pastAssignments.length + \")\" : \"\" }` }\n                    assignments={ pastAssignments }\n                    emptyText=\"There aren't any past assignments.\"\n                    defaultExpanded={ false }\n                />\n            </div>\n        </div>\n    )\n}","import { style } from 'typestyle'\n\nexport const assignmentBucketContainerClass = (style as any)({\n    '& .MuiExpansionPanelSummary-expandIcon': {\n        paddingLeft: 6,\n        paddingRight: 6\n    }\n})\n\nexport const assignmentListItemClass = (style as any)({\n    '&:first-child': {\n        paddingTop: '0 !important',\n    },\n    '&:first-child > .MuiListItemText-root': {\n        marginTop: '0 !important'\n    }\n})\n\nexport const assignmentListHeaderClass = style({\n    color: 'var(--jp-ui-font-color0)',\n    fontSize: 13,\n    fontWeight: 500\n})\n\nexport const downloadAssignmentButtonClass = style({\n    backgroundColor: 'var(--md-blue-500)',\n    border: 0,\n    borderRadius: 0,\n    cursor: 'pointer',\n    color: 'white',\n    fontSize: 'var(--jp-ui-font-size1)',\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n})","import React, { Fragment, useMemo, useState } from 'react'\nimport { List, ListItem, ListItemAvatar as _ListItemAvatar, ListItemText, Avatar, Input, CircularProgress } from '@material-ui/core'\nimport { GetAppSharp } from '@material-ui/icons'\nimport { classes } from 'typestyle'\nimport {\n    containerClass, openFileBrowserButtonClass, textContainerClass,\n    warningTextContainerClass\n} from './style'\nimport { AssignmentsList } from '../assignments-list'\nimport { TextDivider } from '../../text-divider'\nimport { cloneStudentRepository } from '../../../api'\nimport { useAssignment, useCommands } from '../../../contexts'\nimport { DateFormat } from '../../../utils'\nimport { activeStyle, disabledStyle, submitRootClass, summaryClass } from '../assignment-submit-form/style'\n\ninterface NoAssignmentWarningProps {\n    noRepository: boolean\n}\n\nexport const NoAssignmentWarning = ({ noRepository }: NoAssignmentWarningProps) => {\n    const commands = useCommands()!\n    const { path } = useAssignment()!\n\n    const [repositoryUrl, setRepositoryUrl] = useState<string>('')\n    const [loading, setLoading] = useState<boolean>(false)\n    const [errorMessage, setErrorMessage] = useState<string | null>(null)\n\n    const cloneRepository = async (repositoryUrl: string) => {\n        if (!path) {\n            console.log(\"Unknown cwd, can't clone\")\n            return\n        }\n        setLoading(true)\n        try {\n            const repositoryRootPath = await cloneStudentRepository(repositoryUrl, path)\n            commands.execute('filebrowser:go-to-path', {\n                path: repositoryRootPath,\n                dontShowBrowser: true\n            })\n        } catch (e: any) {\n            setErrorMessage(e.message)\n        }\n        setLoading(false)\n    }\n\n    if (noRepository) return (\n        <div className={ containerClass }>\n            <div style={{ width: '100%', marginBottom: 4 }}>\n                <div style={{ display: 'flex', alignItems: 'stretch', width: '100%' }}>\n                    <Input\n                        className={ summaryClass }\n                        classes={{\n                            root: submitRootClass,\n                            focused: activeStyle,\n                            // disabled: disabledStyle\n                        }}\n                        style={{\n                            borderRadius: 0,\n                            borderRight: 'none',\n                            marginBottom: 0,\n                            flexGrow: 1,\n                            height: '2.25em',\n                            borderWidth: 1,\n                            overflow: 'visible'\n                        }}\n                        type=\"url\"\n                        placeholder=\"Class repository URL\"\n                        title=\"Enter the URL to the class's git repository\"\n                        error={ errorMessage !== null }\n                        value={ repositoryUrl }\n                        onChange={ (e) => {\n                            setErrorMessage(null)\n                            setRepositoryUrl(e.target.value)\n                        }}\n                        onKeyDown={ (e) => {\n                            if (loading) return\n                            if (e.key === 'Enter') cloneRepository(repositoryUrl)\n                        }}\n                        // disabled={ loading }\n                        required\n                        disableUnderline\n                        fullWidth\n                    />\n                    <button\n                        className={ classes(openFileBrowserButtonClass, loading && disabledStyle) }\n                        style={{\n                            borderRadius: 0,\n                            margin: 0,\n                            width: '2.25em',\n                            height: '2.25em',\n                            display: 'flex',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                        }}\n                        disabled={ loading }\n                        onClick={ () => cloneRepository(repositoryUrl) }\n                    >\n                        { !loading ? (\n                            <GetAppSharp style={{ fontSize: 20 }} />\n                        ) : (\n                            <CircularProgress\n                                color=\"inherit\"\n                                style={{ width: 14, height: 14, color: 'white' }}\n                            />\n                        ) }\n                    </button>\n                </div>\n                <div style={{ color: 'var(--jp-error-color1)', marginTop: 8, marginBottom: 4, fontSize: '0.75rem', wordBreak: 'break-all' }}>\n                    { errorMessage }\n                </div>\n            </div>\n            <div className={ textContainerClass }>\n                You are not currently in your class repository. If you haven't\n                already cloned your class repository, you can download it here.\n            </div>\n            <div className={ warningTextContainerClass }>\n                Warning: Don't clone the repository again if you've already downloaded it!\n                Navigate to the repository in the file browser.\n            </div>\n            <button\n                className={ openFileBrowserButtonClass }\n                onClick={ () => commands.execute('filebrowser:toggle-main') }\n            >\n                Open the FileBrowser\n            </button>\n        </div>\n    )\n    return (\n        <div className={ containerClass }>\n            <div className={ textContainerClass }>\n                You are not currently in an assignment.\n                To submit your work, navigate to an assignment\n                in the filebrowser or open it here.\n            </div>\n            <TextDivider innerStyle={{ fontSize: 15 }} style={{ width: '100%', marginTop: 12 }}>Assignments</TextDivider>\n            <AssignmentsList />\n        </div>\n    )\n}","import { style } from 'typestyle'\n\nexport const containerClass = style({\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: '13px 11px 4px 11px',\n})\n\nexport const textContainerClass = style({\n    width: '100%',\n    fontSize: 'var(--jp-ui-font-size1)',\n    lineHeight: 'var(--jp-content-line-height)',\n    textAlign: 'left',\n})\n\nexport const openFileBrowserButtonClass = style({\n    backgroundColor: 'var(--md-blue-500)',\n    border: 0,\n    borderRadius: 3,\n    cursor: 'pointer',\n    color: 'white',\n    fontSize: 'var(--jp-ui-font-size1)',\n    height: 28,\n    margin: '8px 0',\n    width: 200,\n})\n\nexport const warningTextContainerClass = style({\n    fontSize: 12,\n    fontWeight: 500,\n    color: 'var(--jp-warn-color0)',\n    margin: '8px 0'\n})","import { style } from 'typestyle'\n\nexport const panelWrapperClass = (style as any)({\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    color: 'var(--jp-ui-font-color1)',\n    fontSize: 'var(--jp-ui-font-size1)',\n    background: 'var(--jp-layout-color1) !important',\n    '&, & *': { boxSizing: 'border-box' } \n})\n\nexport const panelHeaderClass = style({\n    display: 'flex',\n    alignItems: 'center',\n    borderBottom: 'var(--jp-border-width) solid var(--jp-border-color2)',\n    flex: '0 0 auto',\n    fontSize: 11,\n    fontWeight: 600,\n    letterSpacing: 1,\n    margin: 0,\n    // It appears slightly off-center vertically, so this is just a small adjustment to fix that.\n    marginTop: 2,\n    padding: '8px 12px',\n    textTransform: 'uppercase'\n})","import { style } from 'typestyle'\n\nexport const textDividerClass = (style as any)({\n\n})\n\nexport const disabledButtonClass = style({\n    cursor: 'not-allowed !important',\n    backgroundColor: 'var(--jp-layout-color3) !important',\n    pointerEvents: 'auto !important' as any\n});","import { style } from 'typestyle'\n\nexport const textDividerContainerClass = (style as any)({\n    display: 'flex',\n    alignItems: 'center',\n    color: 'var(--jp-ui-font-color0)',\n    fontWeight: 500,\n    textAlign: 'center',\n\n    '&::before, &::after': {\n        content: '\"\"',\n        position: 'relative',\n        width: '100%',\n        borderBottom: 'var(--jp-border-width) solid var(--jp-border-color2)',\n        transform: 'translateY(50%)'\n    },\n    // Left-align adjustments\n    '&.left::before': {\n        width: 'var(--orientation-margin)'\n    },\n    // Right-align adjustmments'\n    '&.right::after': {\n        width: 'var(--orientation-margin)'\n    }\n\n})\n\nexport const textDividerTextClass = style({\n    display: 'inline-block'\n})","import React, { CSSProperties, ReactNode } from 'react'\nimport { classes } from 'typestyle'\nimport { textDividerContainerClass, textDividerTextClass } from './style'\n\n\n\ninterface TextDividerProps extends React.HTMLProps<HTMLDivElement> {\n    orientation?: 'left' | 'right' | 'center'\n    // Only valid if orientation isn't center\n    orientationMargin?: number\n    innerStyle?: CSSProperties\n    children: ReactNode\n}\n\nexport const TextDivider = ({\n    orientation='left',\n    orientationMargin=0,\n    innerStyle={},\n    style={},\n    children,\n    ...props\n}: TextDividerProps) => {\n    const textStyle = orientation === 'left' ? {\n        marginLeft: orientationMargin,\n        paddingLeft: orientationMargin !== 0 ? 12 : 0,\n        paddingRight: 12\n    } : orientation === 'right' ? {\n        marginRight: orientationMargin,\n        paddingRight: orientationMargin !== 0 ? 12 : 0,\n        paddingLeft: 12\n    } : {\n        paddingLeft: 12,\n        paddingRight: 12\n    }\n    return (\n        <div\n            className={ classes(textDividerContainerClass, orientation) }\n            style={{\n                '--orientation-margin': `${ orientationMargin }px`,\n                ...style\n            } as any}\n            { ...props }\n        >\n            <span\n                className={ textDividerTextClass }\n                style={{\n                    ...textStyle,\n                    ...innerStyle\n                }}\n            >\n                { children }\n            </span>\n        </div>\n    )\n}","import React, { createContext, useContext, ReactNode, useState, useMemo, useEffect } from 'react'\nimport { IChangedArgs } from '@jupyterlab/coreutils'\nimport { IEduhelxSubmissionModel } from '../tokens'\nimport { IAssignment, IStudent, ICurrentAssignment, ICourse } from '../api'\n\ninterface IAssignmentContext {\n    assignments: IAssignment[] | null | undefined\n    assignment: ICurrentAssignment | null | undefined\n    student: IStudent | undefined\n    course: ICourse | undefined\n    path: string | null\n    loading: boolean\n}\n\ninterface IAssignmentProviderProps {\n    model: IEduhelxSubmissionModel\n    children?: ReactNode\n}\n\nexport const AssignmentContext = createContext<IAssignmentContext|undefined>(undefined)\n\nexport const AssignmentProvider = ({ model, children }: IAssignmentProviderProps) => {\n    const [currentPath, setCurrentPath] = useState<string|null>(null)\n    const [currentAssignment, setCurrentAssignment] = useState<ICurrentAssignment|null|undefined>(undefined)\n    const [assignments, setAssignments] = useState<IAssignment[]|null|undefined>(undefined)\n    const [student, setStudent] = useState<IStudent|undefined>(undefined)\n    const [course, setCourse] = useState<ICourse|undefined>(undefined)\n\n    const loading = useMemo(() => (\n        currentAssignment === undefined ||\n        assignments === undefined ||\n        student === undefined ||\n        course === undefined\n    ), [currentAssignment, assignments, student, course])\n\n    useEffect(() => {\n        setCurrentPath(model.currentPath)\n        setCurrentAssignment(model.currentAssignment)\n        setAssignments(model.assignments)\n        setStudent(model.student)\n        setCourse(model.course)\n        const onCurrentPathChanged = (model: IEduhelxSubmissionModel, change: IChangedArgs<string|null>) => {\n            setCurrentPath(change.newValue)\n        }\n        const onCurrentAssignmentChanged = (model: IEduhelxSubmissionModel, change: IChangedArgs<ICurrentAssignment|null|undefined>) => {\n            setCurrentAssignment(change.newValue)\n        }\n        const onAssignmentsChanged = (model: IEduhelxSubmissionModel, change: IChangedArgs<IAssignment[]|null|undefined>) => {\n            setAssignments(change.newValue)\n        }\n        const onStudentChanged = (model: IEduhelxSubmissionModel, change: IChangedArgs<IStudent|undefined>) => {\n            setStudent(change.newValue)\n        }\n        const onCourseChanged = (model: IEduhelxSubmissionModel, change: IChangedArgs<ICourse|undefined>) => {\n            setCourse(change.newValue)\n        }\n        model.currentPathChanged.connect(onCurrentPathChanged)\n        model.currentAssignmentChanged.connect(onCurrentAssignmentChanged)\n        model.assignmentsChanged.connect(onAssignmentsChanged)\n        model.studentChanged.connect(onStudentChanged)\n        model.courseChanged.connect(onCourseChanged)\n        return () => {\n            model.currentPathChanged.disconnect(onCurrentPathChanged)\n            model.currentAssignmentChanged.disconnect(onCurrentAssignmentChanged)\n            model.assignmentsChanged.disconnect(onAssignmentsChanged)\n            model.studentChanged.disconnect(onStudentChanged)\n            model.courseChanged.disconnect(onCourseChanged)\n        }\n    }, [model])\n\n    return (\n        <AssignmentContext.Provider value={{\n            assignment: currentAssignment,\n            assignments,\n            student,\n            course,\n            path: currentPath,\n            loading\n        }}>\n            { children }\n        </AssignmentContext.Provider>\n    )\n}\nexport const useAssignment = () => useContext(AssignmentContext)","import React, { createContext, useContext, ReactNode, useState } from 'react'\nimport { CircularProgress, Modal } from '@material-ui/core'\n\ninterface IBackdropContext {\n    setLoading: (loading: boolean) => void\n}\n\ninterface IBackdropProviderProps {\n    children?: ReactNode\n}\n\nexport const BackdropContext = createContext<IBackdropContext|undefined>(undefined)\n\nexport const BackdropProvider = ({ children }: IBackdropProviderProps) => {\n    const [loading, setLoading] = useState<boolean>(false)\n    return (\n        <BackdropContext.Provider value={{\n            setLoading\n        }}>\n            { children }\n            <Modal\n                open={ loading }\n                disableAutoFocus\n                disableEnforceFocus\n            >\n                <div style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    color: 'var(--jp-ui-inverse-font-color0)',\n                    textAlign: 'center'\n                }}>\n                    <CircularProgress color=\"inherit\" />\n                </div>\n            </Modal>\n        </BackdropContext.Provider>\n    )\n}\nexport const useBackdrop = () => useContext(BackdropContext)","import React, { createContext, useContext, ReactNode } from 'react'\nimport { CommandRegistry } from '@lumino/commands'\n\ninterface ICommandsProviderProps {\n    commands: CommandRegistry\n    children?: ReactNode\n}\n\nexport const CommandsContext = createContext<CommandRegistry|undefined>(undefined)\n\nexport const CommandsProvider = ({ commands, children }: ICommandsProviderProps) => {\n    return (\n        <CommandsContext.Provider value={ commands }>\n            { children }\n        </CommandsContext.Provider>\n    )\n}\nexport const useCommands = () => useContext(CommandsContext)","import React, { createContext, useContext, ReactNode } from 'react'\nimport { IServerSettings } from '../api'\n\ninterface ISettingsProviderProps {\n    settings: IServerSettings\n    children?: ReactNode\n}\n\nexport const SettingsContext = createContext<IServerSettings|undefined>(undefined)\n\nexport const SettingsProvider = ({ settings, children }: ISettingsProviderProps) => {\n    return (\n        <SettingsContext.Provider value={ settings }>\n            { children }\n        </SettingsContext.Provider>\n    )\n}\nexport const useSettings = () => useContext(SettingsContext)","import React, { createContext, useContext, ReactNode, useState, Fragment } from 'react'\nimport { Portal, Snackbar, SnackbarOrigin } from '@material-ui/core'\nimport { Alert, Color } from '@material-ui/lab'\nimport { v4 as uuidv4 } from 'uuid'\n\ninterface CreateSnackbarProps {\n    key?: string\n    className?: string\n    duration?: number\n    type?: Color\n    message?: string\n    alignment?: SnackbarOrigin\n    // Override type/message\n    content?: ReactNode\n}\n\ninterface CreateSnackbar {\n    (props: CreateSnackbarProps): string\n}\n\ninterface ISnackbarContext {\n    open: CreateSnackbar\n    destroy: (key: string) => void\n} \n\ninterface ISnackbarProviderProps {\n    children?: ReactNode\n}\n\nexport const SnackbarContext = createContext<ISnackbarContext|undefined>(undefined)\n\nexport const SnackbarProvider = ({ children }: ISnackbarProviderProps) => {\n    const [snackbars, setSnackbars] = useState<{\n        [key: string]: CreateSnackbarProps\n    }>({})\n\n    const createSnackbar: CreateSnackbar = (props: CreateSnackbarProps) => {\n        props.duration = props.duration ?? 2500\n        props.key = props.key ?? uuidv4()\n        props.alignment = props.alignment ?? { vertical: 'bottom', horizontal: 'right' }\n        console.log(props, props.type)\n        if (!props.content) props.content = (\n            <Alert\n                variant=\"filled\"\n                color={ props.type }\n                style={{ \n                    // Bug with Mui, Paper class overrides color/severity class styles\n                    backgroundColor: props.type === 'error' ? 'rgb(253, 236, 234)'\n                        : props.type === 'info' ? 'rgb(232, 244, 253)'\n                        : props.type === 'success' ? 'rgb(237, 247, 237)'\n                        : props.type === 'warning' ? 'rgb(255, 248, 230)'\n                        : undefined,\n                    color: props.type === 'error' ? 'rgb(97, 26, 21)'\n                        : props.type === 'info' ? 'rgb(13, 60, 97)'\n                        : props.type === 'success' ? 'rgb(30, 70, 32)'\n                        : props.type === 'warning' ? 'rgb(102, 77, 2)'\n                        : undefined\n                }}\n                onClose={ () => destroySnackbar(props.key!) }\n            >\n                { props.message }\n            </Alert>\n        )\n        setSnackbars((prevSnackbars) => ({\n                ...prevSnackbars,\n                [props.key!]: props\n        }))\n        return props.key\n    }\n\n    const destroySnackbar = (key: string) => {\n        setSnackbars((prevSnackbars) => {\n            const newSnackbars = { ...prevSnackbars }\n            delete newSnackbars[key]\n            return newSnackbars\n        })\n    }\n    (window as any).open = createSnackbar\n    \n    return (\n        <SnackbarContext.Provider value={{\n            open: createSnackbar,\n            destroy: destroySnackbar\n        }}>\n            <Fragment>\n                { children }\n                <Portal>\n                    { Object.keys(snackbars).map((key) => {\n                        const { className, duration, alignment, content } = snackbars[key]\n                        return (\n                            <Snackbar\n                                key={ key }\n                                className={ className }\n                                open={ true }\n                                autoHideDuration={ duration }\n                                anchorOrigin={ alignment }\n                                onClose={ () => destroySnackbar(key) }\n                            >\n                                { content }\n                            </Snackbar>\n                        )\n                    }) }\n                </Portal>\n            </Fragment>\n        </SnackbarContext.Provider>\n    )\n}\nexport const useSnackbar = () => useContext(SnackbarContext)","import { URLExt } from '@jupyterlab/coreutils'\nimport { ServerConnection } from '@jupyterlab/services'\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI<T>(\n  endPoint = '',\n  init: RequestInit = {}\n): Promise<T> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings()\n  const requestUrl = URLExt.join(\n    settings.baseUrl,\n    'jupyterlab-eduhelx-submission', // API Namespace\n    endPoint\n  )\n\n  let response: Response\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings)\n  } catch (error) {\n    throw new ServerConnection.NetworkError(error as any)\n  }\n\n  let data: any = await response.text()\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data)\n    } catch (error) {\n      console.log('Not a JSON response body.', response)\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data)\n  }\n\n  return data\n}\n","import {\n  ILayoutRestorer,\n  ILabShell,\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application'\nimport { FileBrowserModel, IDefaultFileBrowser } from '@jupyterlab/filebrowser'\nimport { Dialog, showErrorMessage } from '@jupyterlab/apputils'\nimport { IChangedArgs } from '@jupyterlab/coreutils'\nimport { getServerSettings, IServerSettings } from './api'\nimport { AssignmentWidget } from './widgets'\nimport { EduhelxSubmissionModel } from './model'\nimport { submissionIcon } from './style/icons'\nimport { IFileBrowserFactory } from '@jupyterlab/filebrowser'\n\nasync function activate (\n  app: JupyterFrontEnd,\n  fileBrowser: IDefaultFileBrowser,\n  restorer: ILayoutRestorer,\n  shell: ILabShell,\n) {\n  let serverSettings: IServerSettings\n  try {\n    serverSettings = await getServerSettings()\n  } catch (e: any) {\n    console.error('Failed to load the eduhelx_jupyterlab_student extension settings', e)\n    showErrorMessage(\n      'Failed to load the jupyterlab_eduhelx_submission server extension',\n      e.message,\n      [Dialog.warnButton({ label: 'Dismiss' })]\n    )\n    return\n  }\n  // await (fileBrowser.model as any)._restored.promise\n  const model = new EduhelxSubmissionModel()\n  Promise.all([app.restored, fileBrowser.model.restored]).then(() => {\n    model.currentPath = fileBrowser.model.path\n  })\n  fileBrowser.model.pathChanged.connect((fileBrowserModel: FileBrowserModel, change: IChangedArgs<string>) => {\n    model.currentPath = change.newValue\n  })\n\n  const submissionWidget = new AssignmentWidget(\n    model,\n    app.commands,\n    serverSettings\n  )\n  submissionWidget.id = 'jp-submission-widget'\n  submissionWidget.title.icon = submissionIcon\n  submissionWidget.title.caption = 'Submit assignments'\n\n  restorer.add(submissionWidget, 'submission-widget')\n  shell.add(submissionWidget, 'left', { rank: 200 })\n}\n\n/**\n * Initialization data for the jupyterlab_eduhelx_submission extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab_eduhelx_submission:plugin',\n  description: 'A JupyterLab extension tfor submitting assignments in EduHeLx',\n  autoStart: true,\n  requires: [\n    IDefaultFileBrowser,\n    ILayoutRestorer,\n    ILabShell,\n  ],\n  activate\n};\n\nexport default plugin;\n","import { IChangedArgs } from '@jupyterlab/coreutils'\nimport { ISignal, Signal } from '@lumino/signaling'\nimport { Poll } from '@lumino/polling'\nimport { IEduhelxSubmissionModel } from './tokens'\nimport { getAssignments, IAssignment, IStudent, ICurrentAssignment, GetAssignmentsResponse, GetStudentAndCourseResponse, getStudentAndCourse, ICourse } from './api'\n\nexport class EduhelxSubmissionModel implements IEduhelxSubmissionModel {\n    private _isDisposed: boolean = false\n    private _currentPath: string | null = null\n    private _currentAssignment: ICurrentAssignment | null | undefined = undefined\n    private _assignments: IAssignment[] | null | undefined = undefined\n    private _student: IStudent | undefined = undefined\n    private _course: ICourse | undefined = undefined\n\n    private _assignmentPoll: Poll\n\n    private _currentPathChanged = new Signal<\n        IEduhelxSubmissionModel,\n        IChangedArgs<string | null>\n    >(this)\n    private _currentAssignmentChanged = new Signal<\n        IEduhelxSubmissionModel,\n        IChangedArgs<ICurrentAssignment | null | undefined>\n    >(this)\n    private _assignmentsChanged = new Signal<\n        IEduhelxSubmissionModel,\n        IChangedArgs<IAssignment[] | null | undefined>\n    >(this)\n    private _studentChanged = new Signal<\n        IEduhelxSubmissionModel,\n        IChangedArgs<IStudent | undefined>\n    >(this)\n    private _courseChanged = new Signal<\n        IEduhelxSubmissionModel,\n        IChangedArgs<ICourse | undefined>\n    >(this)\n\n    constructor() {\n        this._assignmentPoll = new Poll({\n            factory: this._refreshModel.bind(this),\n            frequency: {\n                interval: 3000,\n                backoff: true,\n                max: 300 * 1000\n            },\n            standby: this._refreshStandby\n        })\n    }\n\n    get isDisposed() {\n        return this._isDisposed\n    }\n\n    get assignments(): IAssignment[] | null | undefined {\n        return this._assignments\n    }\n    private set assignments(v: IAssignment[] | null | undefined) {\n        const change: IChangedArgs<IAssignment[] | null | undefined> = {\n            name: 'assignments',\n            newValue: v,\n            oldValue: this.assignments\n        }\n        this._assignments = v\n        this._assignmentsChanged.emit(change)\n    }\n    get assignmentsChanged(): ISignal<IEduhelxSubmissionModel, IChangedArgs<IAssignment[] | null | undefined>> {\n        return this._assignmentsChanged\n    }\n\n    get student(): IStudent | undefined {\n        return this._student\n    }\n    private set student(v: IStudent | undefined) {\n        const change: IChangedArgs<IStudent | undefined> = {\n            name: 'student',\n            newValue: v,\n            oldValue: this.student\n        }\n        this._student = v\n        this._studentChanged.emit(change)\n    }\n    get studentChanged(): ISignal<IEduhelxSubmissionModel, IChangedArgs<IStudent | undefined>> {\n        return this._studentChanged\n    }\n\n    get course(): ICourse | undefined {\n        return this._course\n    }\n    private set course(v: ICourse | undefined) {\n        const change: IChangedArgs<ICourse | undefined> = {\n            name: 'course',\n            newValue: v,\n            oldValue: this.course\n        }\n        this._course = v\n        this._courseChanged.emit(change)\n    }\n    get courseChanged(): ISignal<IEduhelxSubmissionModel, IChangedArgs<ICourse | undefined>> {\n        return this._courseChanged\n    }\n\n    // Undefined: loading, null: no current assignment\n    get currentAssignment(): ICurrentAssignment | null | undefined {\n        return this._currentAssignment\n    }\n    private set currentAssignment(v: ICurrentAssignment | null | undefined) {\n        const change: IChangedArgs<ICurrentAssignment | null | undefined> = {\n            name: 'currentAssignment',\n            newValue: v,\n            oldValue: this.currentAssignment\n        }\n        this._currentAssignment = v\n        this._currentAssignmentChanged.emit(change)\n    }\n    get currentAssignmentChanged(): ISignal<IEduhelxSubmissionModel, IChangedArgs<ICurrentAssignment | null | undefined>> {\n        return this._currentAssignmentChanged\n    }\n    \n    get currentPath(): string | null {\n        return this._currentPath\n    }\n    set currentPath(v: string | null) {\n        const change: IChangedArgs<string | null> = {\n            name: 'currentPath',\n            newValue: v,\n            oldValue: this.currentPath\n        }\n        this._currentPath = v\n        this._currentPathChanged.emit(change)\n        this.refreshAssignment()\n    }\n    get currentPathChanged(): ISignal<IEduhelxSubmissionModel, IChangedArgs<string | null>> {\n        return this._currentPathChanged\n    }\n\n    private async _loadAssignments(): Promise<GetAssignmentsResponse | undefined> {\n        // If the currentPath is loading, the assignment is also loading.\n        if (this.currentPath === null) {\n            return undefined\n        }\n        try {\n            return await getAssignments(this.currentPath)\n        } catch (e: any) {\n            console.error(e)\n            // If the request encouners an error, default to loading.\n            // Don't want to mislead and say an assignment directory isn't an assignment due to an error here.\n            return undefined\n        }\n    }\n\n    private async _loadStudentAndCourse(): Promise<GetStudentAndCourseResponse | undefined> {\n        try {\n            return await getStudentAndCourse()\n        } catch (e: any) {\n            console.error(e)\n            // If the request encouners an error, default to loading.\n            return undefined\n        }\n    }\n\n    async refreshAssignment() {\n        // Set assignment to loading.\n        this.currentAssignment = undefined\n        this.assignments = undefined\n        this.student = undefined\n        // await this._assignmentPoll.refresh()\n        this._refreshModel()\n        await this._assignmentPoll.tick\n    }\n\n    private async _refreshModel(): Promise<void> {\n        const [\n            assignmentsResponse,\n            studentAndCourseResponse\n        ] = await Promise.all([\n            this._loadAssignments(),\n            this._loadStudentAndCourse()\n        ])\n        if (assignmentsResponse === undefined) {\n            this.assignments = undefined\n            this.currentAssignment = undefined\n        } else {\n            this.assignments = assignmentsResponse.assignments\n            this.currentAssignment = assignmentsResponse.currentAssignment\n        }\n        if (studentAndCourseResponse === undefined) {\n            this.student = undefined\n            this.course = undefined\n        } else {\n            this.student = studentAndCourseResponse.student\n            this.course = studentAndCourseResponse.course\n        }\n    }\n\n    /**\n     * Determine if polling should temporarily suspend.\n     * \n     * Stand by, if:\n     * - webpage hidden\n     */\n    private _refreshStandby(): boolean | Poll.Standby {\n        // if (this.currentPath === null) return true\n        return 'when-hidden'\n    }\n\n    dispose() {\n        if (this.isDisposed) return\n        this._isDisposed = true\n\n        this._assignmentPoll.dispose()\n        Signal.clearData(this)\n    }\n}","import { LabIcon } from '@jupyterlab/ui-components'\nimport publishSvg from '../../style/icons/publish.svg'\n\nexport const submissionIcon = new LabIcon({ name: 'eduhelx-submission', svgstr: publishSvg })","import React, { Fragment, ReactNode, useEffect, useState } from 'react'\nimport moment, { Moment, duration } from 'moment'\n\ninterface IDateFormat {\n    // E.g. Mar 5 at 11:59 PM\n    toBasicDatetime(): string\n    // E.g. in 3 months, 2 weeks\n    // in 2 hours\n    toRelativeDatetime(referenceTime?: Date): ReactNode | string\n}\n\nconst ReactiveTime = ({ getTime }: { getTime: () => string }) => {\n    const [time, setTime] = useState<string>(getTime())\n    useEffect(() => {\n        // Doesn't need to precisely sync to the internal time or anything\n        // because the humanized moment is imprecise. \n        const interval = window.setInterval(() => {\n            setTime(getTime())\n        }, 1000)\n        return () => {\n            window.clearInterval(interval)\n        }\n    }, [])\n    return <Fragment>{ time }</Fragment>\n}\n\n// The purpose of this is to standardize the date string formats used across the project.\nexport class DateFormat implements IDateFormat {\n    private _date: Date\n    private _moment: Moment\n    constructor(date: Date) {\n        this._date = date\n        this._moment = moment(date)\n    }\n\n    toBasicDatetime(): string {\n        return this._moment.format(\"MMM DD [at] h[:]mm A\")\n    }\n\n    toRelativeDatetime(referenceTime?: Date): ReactNode | string {\n        const getDuration = (date: Date) => duration(this._moment.diff(moment(date))).humanize()\n        if (referenceTime) return getDuration(referenceTime)\n        return <ReactiveTime getTime={ () => getDuration(new Date()) } />\n    }\n}","import React from 'react'\nimport { ReactWidget } from '@jupyterlab/apputils'\nimport { CommandRegistry } from '@lumino/commands'\nimport { StylesProvider } from '@material-ui/core/styles'\nimport { AssignmentPanel } from '../components'\nimport { IServerSettings } from '../api'\nimport { AssignmentProvider, CommandsProvider, SettingsProvider, BackdropProvider, SnackbarProvider } from '../contexts'\nimport { IEduhelxSubmissionModel } from '../tokens'\n\nexport class AssignmentWidget extends ReactWidget {\n    private model: IEduhelxSubmissionModel\n    private commands: CommandRegistry\n    private serverSettings: IServerSettings\n\n    constructor(\n        model: IEduhelxSubmissionModel,\n        commands: CommandRegistry,\n        serverSettings: IServerSettings\n    ) {\n        super()\n        \n        this.model = model\n        this.commands = commands\n        this.serverSettings = serverSettings\n    }\n\n    render() {\n        return (\n            <StylesProvider injectFirst>\n                <CommandsProvider commands={ this.commands }>\n                    <SettingsProvider settings={ this.serverSettings }>\n                        <BackdropProvider>\n                            <SnackbarProvider>\n                                <AssignmentProvider model={ this.model }>\n                                    <AssignmentPanel />\n                                </AssignmentProvider>\n                            </SnackbarProvider>\n                        </BackdropProvider>\n                    </SettingsProvider>\n                </CommandsProvider>\n            </StylesProvider>\n        )\n    }\n}"],"names":[],"sourceRoot":""}